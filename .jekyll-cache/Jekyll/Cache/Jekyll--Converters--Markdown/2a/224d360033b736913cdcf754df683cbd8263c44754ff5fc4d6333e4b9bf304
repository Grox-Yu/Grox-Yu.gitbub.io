I"z<blockquote>
  <p>“最近写论文用到了EKF，以前都只是对滤波问题了解工程上的大概，这次对相关知识做一个系统性的总结。</p>
</blockquote>

<p><a href="https://www.zhihu.com/question/23971601/answer/839664224">基础介绍资料1-来自matlab的官方入门讲解</a></p>

<h3 id="一卡尔曼滤波感性认识">一、卡尔曼滤波感性认识</h3>
<p>一个卡尔曼滤波的典型应用是用于传感器融合。以Matlab视频中的简单例子作一个初步的感性认识。</p>

<p>假设一个小车在行驶的过程中，我们想要知道小车的具体位置，我们有两种方式可以获取它的位置信息：</p>
<ul>
  <li>已知小车$t-1$时刻的位置、速度、加速度等信息，我们可以通过运动学公式计算出小车理想状态在t时刻的位置 $\hat{P1}$；</li>
  <li>同样，如果我们在$t$时刻采用GPS定位，也能得到小车的位置信息 $\hat{P2}$。</li>
</ul>

<p>然而，在第一种方法中，小车由于天气因素，车轮滑动等各种原因引起的误差，使得该计算值 $\hat{P1}$ 并不精确；而GPS由于精度的原因，其输出的小车具体位置 $\hat{P2}$ 同样存在误差。那么如何结合这两个估计值 $\hat{P1}$ 和 $\hat{P2}$，获得比较精确的小车的实际位置呢？</p>

<p>直觉上能想到的可以直接将两个值做平均，做为小车实际位置的估计。当然，也可以找出一个你比较信任的值，给与比较大的权重，做加权平均，如 0.7 * $\hat{P1}$ + 0.3 * $\hat{P2}$。事实上，卡尔曼滤波的核心思想和这种思路非常相似。</p>

<p>实际上，由于误差的存在，$\hat{P1}$ 和 $\hat{P2}$ 可以看做是两个随机分布。通过$t-1$时刻估算出的$t$时刻小车位置的概率分布如下图所示：</p>

<p><img src="https://s1.ax1x.com/2020/05/10/Y3Rt8x.jpg" alt="" /></p>

<p>而通过GPS测量，小车位置的概率分布如下图所示：</p>

<p><img src="https://s1.ax1x.com/2020/05/10/Y3R5ZQ.jpg" alt="" /></p>

<p>假设两个随机分布服从高斯分布，那么通过卡尔曼滤波算法（找到一个加权的值）计算出的最终小车位置的分布结果为下图中绿色的部分：</p>

<p><img src="https://s1.ax1x.com/2020/05/10/Y3Rhqg.jpg" alt="" /></p>

<p>最终得出小车位置的实际估算位置（分布/区间）。</p>

<h3 id="二卡尔曼滤波细节详述">二、卡尔曼滤波细节详述</h3>
<p>上面的文字描述只是为了形象地描述卡尔曼滤波的功能有一个感性的认识。下面这一节对算法和背后的一些理论做一些详细记录。</p>

<h4 id="21-卡尔曼滤波离散状态方程">2.1 卡尔曼滤波离散状态方程</h4>

<p>卡尔曼滤波有两个重要的方程（系统离散状态方程），即：</p>

<p>从$k-1$到$k$时刻的系统状态预测方程，表示如何通过k-1的状态得出k状态（即上文中的通过运动学公式的计算的小车位置）：</p>

<script type="math/tex; mode=display">X_k = AX_{k-1} + Bu_k +w_k</script>

<p>系统状态观测方程（观测得出的，即上文中所说的GPS观测的小车位置）：</p>

<script type="math/tex; mode=display">Z_k = HX_k +v_k</script>

<p>其中$X_k$，$X_{k-1}$为系统在$k$时刻和$k-1$时刻的状态，$A$为状态转移矩阵，$B$为系统输入增益矩阵，$u_k$为系统输入，$w_k$和$v_k$分别为计算的噪声和观测的噪声，$H$为测量矩阵。</p>

<p>可以再结合前文中关于小车的例子进一步进行直观解释，如果我们想要知道的小车状态为距离$d$和速度$v$（即$X$变成了一个向量包含两个值）。假设我们已知$k-1$时刻的$d_{k-1}$和$v_{k-1}$，又知道加速度$a$，时间间隔为$t$，那么根据运动学公式（高中知识）：</p>

<script type="math/tex; mode=display">d_k = d_{k-1} + v_{k-1} + 1/2at^2</script>

<script type="math/tex; mode=display">v_k = v_{k-1} + at</script>

<p>那么在公式$ X_k = AX_{k-1} + Bu_k +w_k $中的各项分别为:</p>

<script type="math/tex; mode=display">X_t = [d, v] ^\mathrm{T}</script>

<script type="math/tex; mode=display">% <![CDATA[
A = \left[
 \begin{matrix}
   1 & t \\
   0 & 1 \\
  \end{matrix}
  \right] %]]></script>

<script type="math/tex; mode=display">u_t = a</script>

<script type="math/tex; mode=display">B = [1/2t^2 ,t]</script>

<p>KF
 EKF
 UKF
 PF</p>

<p>文章最后，贴上一段来自<a href="https://www.zhihu.com/question/23971601/answer/194543896">灵剑大佬</a>关于卡尔曼滤波的理解，感觉很有启发：</p>
<blockquote>
  <p>“ 信号处理中的滤波实质上就是讲降噪。一个信号通常是有用的原始信号与一个噪声的叠加，噪声一般用高斯白噪声描述，它们混在一起了，我放大信号噪声也放大，缩小噪声信号也缩小，一般我没有通用办法改善信噪比。但是如果我有好几个信号，里面包含了相同的原始信号，我把它们叠加在一起，原始信号是相干叠加，幅度变成两倍功率变成了四倍，而噪声是非相干叠加，许多地方会相互抵消，功率只变成两倍，这样信噪比就提高了一倍。所有的“滤波”降噪，本质上都是通过相干叠加增强原始信号提高信噪比的。上面的情况是信噪比相同，如果信噪比不同呢？用一步柯西不等式就能证明，对于噪声功率相同的信号，只要按各自信号功率比例混合，就能最大化信噪比。最后，如果不是另采了一个信号，而是用历史测量值来预测，将预测值作为另一个信号，这个预测值的信噪比是可以推算出来的，再采用前面的方法就得到卡尔曼滤波。</p>
</blockquote>
:ET