I"0<blockquote>
  <p>“最近写论文用到了EKF，以前都只是对滤波问题了解工程上的大概，这次对相关知识做一个系统性的总结。</p>
</blockquote>

<p>参考资料：</p>

<p><a href="https://zhuanlan.zhihu.com/p/81168960">EKF理解1</a>
<a href="https://zhuanlan.zhihu.com/p/134244047">EKF理解2</a></p>

<h3 id="一扩展卡尔曼滤波ekf基本介绍">一、扩展卡尔曼滤波（EKF）基本介绍</h3>
<p>前文已经对Kalman Filter做了一个简单明了但粗浅的描述。前文的末尾也提到，卡尔曼滤波器的局限就在于系统过程必须是线性过程，如果是非线性过程则不可用。那么有没有办法将非线性过程转化为线性过程呢？答案是肯定的，这也是EKF的基本思路，即将非线性函数通过泰勒级数展开（通常一阶展开即可）的方式，将非线性函数在mean处的斜率做线性近似。但EKF依然建立在输入噪声和测量噪声均为高斯的前提下。</p>

<p>EKF系统描述方程如下：</p>

<script type="math/tex; mode=display">X_k = g(x_{k-1},u_{k-1}) +w_k</script>

<script type="math/tex; mode=display">Z_k = h(x_k) + v_k</script>

<p>可以看出，系统的传递方程和观测方程用$g$，$h$两个非线性函数表示了。那么很明显，EKF就是通过将$g$，$h$两个函数线性化，实现复用基本卡尔曼滤波器的思想。当x_k只有一维的时候，很好理解。而当其为多维的时候，需要用到雅克比矩阵完成该变换（雅克比矩阵可以简单理解为多维情况下的导数）。如下图所示：</p>

<p><img src="https://s1.ax1x.com/2020/05/13/YaZvBF.jpg" alt="" /></p>

<p>经过变换后，EKF的算法过程如下图所示（将Wiki上的算法过程做了个简单截图）：</p>

<p><img src="https://s1.ax1x.com/2020/05/13/YaurKP.png" alt="" /></p>

<p>值得注意的是，在算法中，并不是所有的都会用到线性近似，比如在下一步状态估计过程（方程1）和计算残差（方程3）中，还是用的原函数而非近似后的函数。</p>

<p>但是，扩展卡尔曼滤波器还是有以下缺点：</p>

<ul>
  <li>由于复杂的导数，可能难以解析计算雅可比矩阵。</li>
  <li>以数值方式计算雅可比矩阵，可能需要很高的计算成本。</li>
  <li>扩展卡尔曼滤波器不适用于不连续的系统，因为系统不可微分时，雅可比矩阵不存在。</li>
  <li>对于高度非线性化的系统，效果并不好。</li>
</ul>

<p>因此后续提出的无迹卡尔曼滤波（UKF）用以解决EKF的这些问题。</p>

<h3 id="二无迹卡尔曼滤波ukf基本介绍">二、无迹卡尔曼滤波（UKF）基本介绍</h3>

<p><a href="https://www.cnblogs.com/gaoxiang12/p/5560360.html">参考文章</a>
无迹卡尔曼滤波的基本思路是，它不像EKF那样去近似非线性函数，而是直接去近似概率分布。即它经过非线性变换后，用一个高斯分布去近似下一步的概率分布。</p>

<p>它通过含有均值和协方差的确定的点集（称作sigma points），生成一个近似的高斯分布（经验高斯分布），并获得其均值和方差。这种方法把系统当作“黑盒”来处理，因而不依赖于非线性的具体形式。</p>

<h3 id="三例子滤波器pf基本介绍">三、例子滤波器（PF）基本介绍</h3>
:ET